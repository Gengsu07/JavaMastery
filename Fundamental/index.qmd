---
author: gengsudev
theme: default
show-slide-number: all
controls: true
format: html
toc : true
---

# Java Mastery - Fundamental

## Anatomy / Skeleton

``` java
public class Main{
    public void main(){
    // program logic
    }
}
```

<br> - Setiap program selalui ada Main Class - access modifier ditaruh didepan dari class atau method contohnya public - metode dapat dikumpulkan dalam class yang yg sama - class dapat diorganize dalam satu package

<br>

### Naming Convention

-   Class --> Pascal Case
-   Metode --> camelCase

---

## Java is Platform Independent

> Program dalam Java dapat dijalankan dalam semua platform sehingga platform independen

<br>

### Execution

Ada 2 tahapan utama:

1.  

    #### **Compilation**

    Source code .java di compile menjadi bytecode. Bytecode adalah file yang berisi instruksi-instruksi yang dapat diinterpretasikan oleh JVM.

2.  

    #### **Execution**

    Bytecode dijalankan oleh JVM. JVM akan mengeksekusi instruksi-instruksi yang ada di bytecode untuk mengeksekusi program.

jadi setiap komputer harus memiliki JRE (Java Runtime Environment) yang berisi JVM untuk menjalankan program Java.

---

## Data Types

![](media/primitive.png)
sehingga merubah variable x, dan y yang memiliki nilai sama tidak akan merubah nilai variable yang lain.
<br>

#### **Primitive** 
> independen, tiap variable memiliki alamat memori sendiri 
> menyimpan simple data values 

![](media/dtype.png)
<br>

- **byte** : an integer value between 128 to 127 \n
- **int** : an integer value between -2147483648 to 2147483647\n
- **float**: a 4 byte floating-point number 
- **double**: a 8 byte floating-point number 
- **boolean**: true / false 
- **char**: pakai single quote


``` java
public class Main {
    public static void main(String[] args) {
        float saldo = 10000000.33F;
        byte umur = 28;
        System.out.println("Hello, World!");
        System.out.println(saldo);
    }
}
```
Intellij Idea saat merubah dari int ke float atau tipe data lain akan error karena IDE melakukan type checking, cara mengatasi error menambahkan F dibelakang angka


<br>

#### **Reference / Non-Primitive**
![](media/reference.png)
merubah variable x, dan y yang memiliki nilai sama akan merubah nilai variable yang lain.

> mereferensikan alamat memori dari objek lain menyimpan komplek data \

- **String** 
- **Array** 
- **Object** 
 <br> 
Reference types adalah tipe data yang memiliki referensi ke objek lain. Objek yang direferensikan dapat berubah nilainya sehingga memiliki metode dan atribut dari kelas tersebut.

``` java
import java.awt.*;
import java.util.Date;

public class Main {
    public static void main(String[] args) {
        Date now = new Date();
        Point point1 = new Point(1,1);
        Point point2 = point1;
        point2.x = 5;
        System.out.println(point1);
    }
}
```
java.awt.Point[x=5,y=1]

membuat variable now dengan tipe data Date yang merupakan reference type dari java.util.Date. Ketika dijalankan akan menampilkan waktu saat program dijalankan. jadi pakai **new()** untuk inisiasi membuat objek baru.

---

## String
merupakan reference data type sehingga memiliki atribut dan metode.
Namun, untuk memnbuat variable string bisa dengan cara singkat tanpa new() seeperti berikut

```java
String str = "Hello World";
```

- **endswith**
- **startswith**
- **length**
- **indexOf******
- **toLowerCase**
- **toUpperCase**
- **tolowerCase**
- **trim**
- **replace**
  
String is immutable, so return new object

```java
public class Main {
    public static void main(String[] args) {
        Date now = new Date();
        String kata = "Hari ini tanggal :" + now;
        System.out.println(kata);
        System.out.println(kata.length());
        System.out.println(kata.startsWith("H"));
        System.out.println(kata.endsWith("H"));
        System.out.println(kata.toLowerCase());
        System.out.println(kata.toUpperCase());
        System.out.println(kata.indexOf("a"));
        System.out.println(kata.replace("i","!"));
        System.out.println(kata);
    }
}
```

```bash
Hari ini tanggal :Wed Feb 26 15:57:33 WIB 2025
46
true
false
hari ini tanggal :wed feb 26 15:57:33 wib 2025
HARI INI TANGGAL :WED FEB 26 15:57:33 WIB 2025
1
Har! !n! tanggal :Wed Feb 26 15:57:33 WIB 2025
Hari ini tanggal :Wed Feb 26 15:57:33 WIB 2025
```

---

## Escape Sequence
syntax digunakan untuk menampilkan karakter yang sudah terdefinisi dalam bahasa pemrograman.

- **\n** : untuk pindah ke baris berikutnya
- **\t** : untuk membuat tab
- **\"** : untuk menampilkan karakter "
- **\'** : untuk menampilkan karakter '
- **\\** : untuk menampilkan karakter \

```java
public class Main {
    public static void main(String[] args) {
        System.out.println("Hari ini tanggal :\n" + new Date());
        System.out.println("Hari ini tanggal :\t" + new Date());
        System.out.println("Hari ini tanggal :\" " + new Date());
        System.out.println("Hari ini tanggal :\' " + new Date());
        System.out.println("Hari ini tanggal :\\ " + new Date());
    }
}
```
```bash
Hari ini tanggal :
Wed Feb 26 16:03:08 WIB 2025
Hari ini tanggal :	Wed Feb 26 16:03:08 WIB 2025
Hari ini tanggal : " Wed Feb 26 16:03:08 WIB 2025
Hari ini tanggal :'Wed Feb 26 16:03:08 WIB 2025
Hari ini tanggal :\ Wed Feb 26 16:03:08 WIB 2025
```
---

## Arrays
> **Fix Length** : array dengan panjang yang sama, tidak bisa ditambahkan elemen atau dihapus elemen \n 
> **Not Sorted** : secara default 

### **Cara Deklarasi lama**
- pakai datatype[]
- pakai new datatype[]
- akses elemen dengan []

```java
import java.util.Arrays;
public class Main {
    public static void main(String[] args) {
        int[] numbers = new int[5];
        numbers[0] = 1;
        numbers[1] = 1;

        System.out.println(numbers);
        //[I@7b23ec81

        System.out.println(Arrays.toString(numbers));
        //[1, 1, 0, 0, 0]
        // isi dari elemen yg tidak di inisiasi otomatis 0
    }
}Â 
```

hasilnya ternyata bukan isi dari array tetapi adalah alamat memori dari array. Untuk menampilkan kita bisa menggunakan metode toString()

### **Cara Deklarasi Baru**
- pakai {}
  
```java
int[] numbers = {1,2,4,5,6};

//Sorted
Arrays.sort(numbers);
```